AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Creates an S3 bucket configured for hosting a static website, and a Route 53
  DNS record pointing to the bucket this has been updated to add a cloudfront CacheBehavior 
  to prevent caching of the index page
  also includes logging info
  also contains http to https for index
  lock down of bucket Access 
Parameters:
  DomainName:
    Type: String
    Description: The DNS name of an existing Amazon Route 53 hosted zone e.g. jevsejev.io
    AllowedPattern: '(?!-)[a-zA-Z0-9-.]{1,63}(?<!-)'
    ConstraintDescription: must be a valid DNS zone name.
  FullDomainName:
    Type: String
    Description: The full domain name e.g. www.jevsejev.io
    AllowedPattern: '(?!-)[a-zA-Z0-9-.]{1,63}(?<!-)'
    ConstraintDescription: must be a valid DNS zone name.
  AcmCertificateArn:
    Type: String
    Description: >-
      the Amazon Resource Name (ARN) of an AWS Certificate Manager (ACM)
      certificate.
    AllowedPattern: 'arn:aws:acm:.*'
Mappings:
  RegionMap:
    us-east-1:
      S3HostedZoneId: Z3AQBSTGFYJSTF
    us-west-1:
      S3HostedZoneId: Z2F56UZL2M1ACD
    us-west-2:
      S3HostedZoneId: Z3BJ6K6RIION7M
    eu-west-1:
      S3HostedZoneId: Z1BKCTXD74EZPE
    ap-southeast-1:
      S3HostedZoneId: Z3O0J2DXBE1FTB
    ap-southeast-2:
      S3HostedZoneId: Z1WCIGYICN2BYD
    ap-northeast-1:
      S3HostedZoneId: Z2M4EHUR26P7ZW
    sa-east-1:
      S3HostedZoneId: Z31GFT0UA1I2HV
Resources:
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub ${FullDomainName}-origin
  WebsiteBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref FullDomainName
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
    DeletionPolicy: Retain
    Metadata:
      'AWS::CloudFormation::Designer':
        id: cfa96323-89e1-4f91-bf7e-e8835b37faae
  WebsiteBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: 
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref WebsiteBucket
                - /*
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: 
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
            Action: 's3:ListBucket'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref WebsiteBucket
    Metadata:
      'AWS::CloudFormation::Designer':
        id: d37bf877-c1b5-4f9e-b205-48eaab4dfa88
  WebsiteCloudfront:
    Type: 'AWS::CloudFront::Distribution'
    DependsOn:
      - WebsiteBucket
    Properties:
      DistributionConfig:
        Comment: Cloudfront Distribution pointing to S3 bucket
        Origins:
          - Id: S3Origin
            DomainName: !Sub ${FullDomainName}.s3.amazonaws.com
            S3OriginConfig:
              OriginAccessIdentity: !Sub
                - origin-access-identity/cloudfront/${cloudFrontId}
                - { cloudFrontId: !Ref CloudFrontOriginAccessIdentity}
        Enabled: true
        HttpVersion: http2
        DefaultRootObject: index.html
        Logging:
          IncludeCookies: 'true'
          Bucket: !ImportValue us-east-2-awsdhenton-LoggingBucket-FQDN
          Prefix: !Sub "${FullDomainName}-logs/"
        Aliases:
          - !Ref FullDomainName
        CacheBehaviors:
        - AllowedMethods:
          - GET
          - HEAD
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
          MinTTL: '0'
          MaxTTL: '0'
          DefaultTTL: '0'
          PathPattern: /index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn
          SslSupportMethod: sni-only
    Metadata:
      'AWS::CloudFormation::Designer':
        id: cfbe2149-3753-459e-bc6b-e7485a264562
  WebsiteDNSName:
    Type: 'AWS::Route53::RecordSetGroup'
    Properties:
      HostedZoneName: !Join 
        - ''
        - - !Ref DomainName
          - .
      RecordSets:
        - Name: !Ref FullDomainName
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt 
              - WebsiteCloudfront
              - DomainName
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 9a3a043c-acf3-456c-a3f2-4eb149a975fd
Outputs:
  BucketName:
    Value: !Ref WebsiteBucket
    Description: Name of S3 bucket to hold website content
  CloudfrontEndpoint:
    Value: !GetAtt 
      - WebsiteCloudfront
      - DomainName
    Description: Endpoint for Cloudfront distribution
  FullDomain:
    Value: !Ref FullDomainName
    Description: Full DomainName
