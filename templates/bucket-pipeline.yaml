AWSTemplateFormatVersion: 2010-09-09
Description: >
  This will create a pipeline for code stored in 
Parameters:
  BranchName:
    Description: GitHub branch name
    Type: String
    Default: master
  RepositoryName:
    Description: Source Code GitHub repository name
    Type: String
    Default: code-samples
  GitHubOwner:
      Type: String
      Default: donhenton
  TargetBucketName:
    Description: final S3 bucket destination, this is the S3 bucket website
    Type: String
    Default: com.awsdhenton.testing

Metadata:

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Github Information"    
        Parameters:
          - RepositoryName
          - GitHubOwner  
          - BranchName
      - Label:
          default: "Environment Configuration"          
        Parameters:
          - TargetBucketName  

Resources:

  GithubOauthToken:
    Type: Custom::GetSecureSSMFunction
    Properties:
      ServiceToken:
        !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getSecureSSM"
      ParameterName: "/github/oauth"
  GithubProjectSecret:
    Type: Custom::GetSecureSSMFunction
    Properties:
      ServiceToken:
        !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getSecureSSM"
      ParameterName: !Sub 
        - /github/${RepValue}/secret
        - {RepValue: !Ref RepositoryName}

  CodePipelineArtifactStoreBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 84aa3541-5818-4c5c-99c9-9bdb59d45c22
  CodePipelineArtifactStoreBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref CodePipelineArtifactStoreBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DenyUnEncryptedObjectUploads
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Join 
              - ''
              - - !GetAtt 
                  - CodePipelineArtifactStoreBucket
                  - Arn
                - /*
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption': 'aws:kms'
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: !Join 
              - ''
              - - !GetAtt 
                  - CodePipelineArtifactStoreBucket
                  - Arn
                - /*
            Condition:
              Bool:
                'aws:SecureTransport': false
    Metadata:
      'AWS::CloudFormation::Designer':
        id: f38eafca-da9d-4038-9291-74a2d1980184
  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWS-CodePipeline-Service-3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'devicefarm:ListProjects'
                  - 'devicefarm:ListDevicePools'
                  - 'devicefarm:GetRun'
                  - 'devicefarm:GetUpload'
                  - 'devicefarm:CreateUpload'
                  - 'devicefarm:ScheduleRun'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'elasticbeanstalk:*'
                  - 'ec2:*'
                  - 'elasticloadbalancing:*'
                  - 'autoscaling:*'
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'sns:*'
                  - 'cloudformation:*'
                  - 'rds:*'
                  - 'sqs:*'
                  - 'ecs:*'
                Resource: '*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 24bd386a-0044-4c7b-924d-8731d2891049
 
  AppPipelineWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Sub '${GithubProjectSecret.Value}'
      Filters:
        - JsonPath: $.ref
          MatchEquals: 'refs/heads/{Branch}'
      TargetPipeline: !Ref AppPipeline
      TargetAction: SourceAction
      Name: !Sub 'AppPipelineWebhook-${RepositoryName}'
      TargetPipelineVersion: !GetAtt 
        - AppPipeline
        - Version
      RegisterWithThirdParty: true
    Metadata:
      'AWS::CloudFormation::Designer':
        id: cd6242c8-7fd8-4f7c-8e9a-22f44f6e3d89
  AppPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !Sub 
        - ${RepValue}-deploy-pipeline
        - {RepValue: !Ref RepositoryName}
      RoleArn: !GetAtt 
        - CodePipelineServiceRole
        - Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref RepositoryName
                Branch: !Ref BranchName
                OAuthToken: !Sub '${GithubOauthToken.Value}'
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                BucketName: !Ref TargetBucketName
                Extract: true
              InputArtifacts:
                - Name: SourceOutput
              RunOrder: 2  
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineArtifactStoreBucket


Outputs:
  BucketName:
    Value: !Ref CodePipelineArtifactStoreBucket
    Description: BucketName
 
